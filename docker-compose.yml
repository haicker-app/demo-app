version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: demo-app-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-S6m2GWm5tmaRT}
      MYSQL_DATABASE: noteapp
      MYSQL_ROOT_HOST: "%"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 5s

  # Node.js Application
  app:
    image: docker.registry.haicker.app/demo-app-app:latest
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=${DB_PASSWORD:-S6m2GWm5tmaRT}
      - DB_NAME=noteapp
      - PORT=3000
    depends_on:
      db:
        condition: service_healthy
    command: npm start

  # Nginx Reverse Proxy
  nginx:
    image: docker.registry.haicker.app/demo-app-nginx:latest
    restart: unless-stopped
    volumes:
      - nginx_cache:/var/cache/nginx
    environment:
      - SERVICE_FQDN_APP_3000
    depends_on:
      - app

volumes:
  nginx_cache:
